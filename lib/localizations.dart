import 'dart:async';

import 'package:flutter/material.dart';

/// This class is generated by the flappy_translator package
/// Please do not change anything manually in this file, instead re-generate it when changes are available
class AppLocalizations {
  static String get appTitle => _getText('appTitle');

  static String get generalPlay => _getText('generalPlay');

  static String get generalContinue => _getText('generalContinue');

  static String get generalCommingSoon => _getText('generalCommingSoon');

  static String get categoryfoodDrink => _getText('categoryfoodDrink');

  static String get categorysport => _getText('categorysport');

  static String get homeTabNounOfTheDayLabel =>
      _getText('homeTabNounOfTheDayLabel');

  static String get homeTabFavoritesLabel => _getText('homeTabFavoritesLabel');

  static String get homeTabFavoritesViewAllLabel =>
      _getText('homeTabFavoritesViewAllLabel');

  static String get homeTabFavoritesAddSomeLabel =>
      _getText('homeTabFavoritesAddSomeLabel');

  static String get homeTabProgressLabel => _getText('homeTabProgressLabel');

  static String get homeTabProgressNotStarted =>
      _getText('homeTabProgressNotStarted');

  static String get homeTabProgressViewAll =>
      _getText('homeTabProgressViewAll');

  static String get settingsTabDarkModeLabel =>
      _getText('settingsTabDarkModeLabel');

  static String get settingsTabLanguageLabel =>
      _getText('settingsTabLanguageLabel');

  static String get favoritesNounScreenTitle =>
      _getText('favoritesNounScreenTitle');

  static String get gameCompletedTitle => _getText('gameCompletedTitle');

  static String gameCompletedDescription({
    @required int score,
    @required int numberQuestions,
  }) {
    String text = _getText('gameCompletedDescription');
    if (score != null) {
      text = text.replaceAll("%score\$d", score.toString());
    }
    if (numberQuestions != null) {
      text = text.replaceAll("%numberQuestions\$d", numberQuestions.toString());
    }
    return text;
  }

  static String get gameCompletedButtonPlayAgain =>
      _getText('gameCompletedButtonPlayAgain');

  static String get gameCompletedButtonReturnMainMenu =>
      _getText('gameCompletedButtonReturnMainMenu');

  static Map<String, String> _localizedValues;

  static Map<String, String> _enValues = {
    'appTitle': '¿El o La?',
    'generalPlay': 'Play',
    'generalContinue': 'Continue',
    'generalCommingSoon': 'Coming Soon!',
    'categoryfoodDrink': 'Food & Drink',
    'categorysport': 'Sport',
    'homeTabNounOfTheDayLabel': 'Noun of the day',
    'homeTabFavoritesLabel': 'Favorites',
    'homeTabFavoritesViewAllLabel': 'View all',
    'homeTabFavoritesAddSomeLabel':
        'Having difficulties with some nouns? Add them as favorites!',
    'homeTabProgressLabel': 'Progress',
    'homeTabProgressNotStarted':
        'Once you begin learning, your overall progress will be displayed here.',
    'homeTabProgressViewAll': 'View all nouns',
    'settingsTabDarkModeLabel': 'Dark Mode',
    'settingsTabLanguageLabel': 'Language',
    'favoritesNounScreenTitle': 'Favorites',
    'gameCompletedTitle': 'Congratulations',
    'gameCompletedDescription': 'You scored %score\$d / %numberQuestions\$d!',
    'gameCompletedButtonPlayAgain': 'Play Again',
    'gameCompletedButtonReturnMainMenu': 'Return to Main Menu',
  };

  static Map<String, String> _deValues = {
    'appTitle': '¿El o La?',
    'generalPlay': '[ Play äü ]',
    'generalContinue': '[ Cöntinüe Ößüß ]',
    'generalCommingSoon': '[ Cöming Söön! ÜäöäÜ ]',
    'categoryfoodDrink': '[ Fööd & Drink ẞÄÜäü ]',
    'categorysport': '[ Spört öÜß ]',
    'homeTabNounOfTheDayLabel': '[ Nöün öf the day ẞÖüÜäÄ ]',
    'homeTabFavoritesLabel': '[ Favörites ßöööö ]',
    'homeTabFavoritesViewAllLabel': '[ View all ẞäÖÖ ]',
    'homeTabFavoritesAddSomeLabel':
        '[ Having difficülties with söme nöüns? Ädd them as favörites! üüÖßöẞäöüßÖäẞüÜÜÖß ]',
    'homeTabProgressLabel': '[ Prögress ÖẞÖä ]',
    'homeTabProgressNotStarted':
        '[ Önce yöü ßegin learning, yöür överall prögress will ße displayed here. ßüÄßÖäßÜöÜßÄÖÄÖßüÜüßÖ ]',
    'homeTabProgressViewAll': '[ View all nöüns ÖÜüÜÜÄ ]',
    'settingsTabDarkModeLabel': '[ Dark Möde ẞÜẞöẞ ]',
    'settingsTabLanguageLabel': '[ Langüage ÜßÜÜ ]',
    'favoritesNounScreenTitle': '[ Favörites ẞÖöÜä ]',
    'gameCompletedTitle': '[ Cöngratülatiöns ßüÄüÖÜ ]',
    'gameCompletedDescription':
        '[ Yöü scöred %score\$d / %numberQuestions\$d! ÜßöüÜäüẞßßäÄß ]',
    'gameCompletedButtonPlayAgain': '[ Play Ägain ßÜÄöÜ ]',
    'gameCompletedButtonReturnMainMenu': '[ Retürn tö Main Menü ßẞüÖßäüẞ ]',
  };

  static Map<String, String> _plValues = {
    'appTitle': '¿El o La?',
    'generalPlay': '[ Płay ćę ]',
    'generalContinue': '[ Ćóńtińuę ĘćĄŁ ]',
    'generalCommingSoon': '[ Ćómińg Śóóń! ńĆŁłń ]',
    'categoryfoodDrink': '[ Fóód & Drińk ąźĄĘŹ ]',
    'categorysport': '[ Śpórt śÓĘ ]',
    'homeTabNounOfTheDayLabel': '[ Ńóuń óf thę day ŹŃćąćŹ ]',
    'homeTabFavoritesLabel': '[ Favóritęś ĄśńŁą ]',
    'homeTabFavoritesViewAllLabel': '[ Vięw ałł śććÓ ]',
    'homeTabFavoritesAddSomeLabel':
        '[ Havińg diffićułtięś with śómę ńóuńś? Ądd thęm aś favóritęś! ĄęźŹśćĘÓĄńżŻĘżŹóŹÓ ]',
    'homeTabProgressLabel': '[ Prógręśś śźóĆ ]',
    'homeTabProgressNotStarted':
        '[ Óńćę yóu bęgiń łęarńińg, yóur óvęrałł prógręśś wiłł bę diśpłayęd hęrę. ĄćĆŻóńęŚĘąęĘóŃĄŚÓĘÓąŻ ]',
    'homeTabProgressViewAll': '[ Vięw ałł ńóuńś źĆŹŁĘŹ ]',
    'settingsTabDarkModeLabel': '[ Dark Módę ąłŚŹć ]',
    'settingsTabLanguageLabel': '[ Łańguagę ćŃŻć ]',
    'favoritesNounScreenTitle': '[ Favóritęś ĄśęłĘ ]',
    'gameCompletedTitle': '[ Ćóńgratułatióńś Ęńółżą ]',
    'gameCompletedDescription':
        '[ Yóu śćóręd %score\$d / %numberQuestions\$d! ąęłŚŁŁÓĄŁńŚĆÓ ]',
    'gameCompletedButtonPlayAgain': '[ Płay Ągaiń ńżśńą ]',
    'gameCompletedButtonReturnMainMenu': '[ Ręturń tó Maiń Męńu źŁęŹĘŹŹł ]',
  };

  static Map<String, Map<String, String>> _allValues = {
    'en': _enValues,
    'de': _deValues,
    'pl': _plValues,
  };

  AppLocalizations(Locale locale) {
    _locale = locale;
    _localizedValues = null;
  }

  static Locale _locale;

  static String _getText(String key) {
    return _localizedValues[key] ?? '** $key not found';
  }

  static Locale get currentLocale => _locale;

  static String get currentLanguage => _locale.languageCode;

  static String getText(String key) => _getText(key);

  static Future<AppLocalizations> load(Locale locale) async {
    final translations = AppLocalizations(locale);
    _localizedValues = _allValues[locale.toString()];
    return translations;
  }
}

class AppLocalizationsDelegate extends LocalizationsDelegate<AppLocalizations> {
  const AppLocalizationsDelegate();

  static final Set<Locale> supportedLocals = {
    Locale('en'),
    Locale('de'),
    Locale('pl'),
  };

  @override
  bool isSupported(Locale locale) => supportedLocals.contains(locale);

  @override
  Future<AppLocalizations> load(Locale locale) => AppLocalizations.load(locale);

  @override
  bool shouldReload(AppLocalizationsDelegate old) => false;
}
